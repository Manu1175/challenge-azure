trigger:
  branches:
    include:
      - main

variables:
  # Azure resources
  azureSubscription: '4149b902-be5f-4182-8e76-40c5b566011b'
  functionAppName: 'getraildata'
  resourceGroupName: 'ressource_emmanuel'
  environment: 'production'

  # Chemin vers les tests
  testFolder: 'tests'
  pythonVersion: '3.10'

  # Variables secrètes à définir dans le pipeline UI
  # SqlConnectionString: [Définir dans Azure DevOps Variables secrètes]

pool:
  vmImage: 'ubuntu-latest'

stages:

# 1. Build et tests
- stage: Build_and_Test
  displayName: "Build + Tests"
  jobs:
  - job: BuildTest
    displayName: "Build and run tests"
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
      displayName: "Install dependencies"

    - script: |
        pytest $(testFolder)/ --maxfail=1 --disable-warnings --junitxml=test-results.xml
      displayName: "Run unit tests"

    - task: PublishTestResults@2
      inputs:
        testResultsFiles: '**/test-results.xml'
        testRunTitle: 'Unit Tests'
      condition: succeededOrFailed()

    - script: |
        pytest $(testFolder)/ --maxfail=1 --disable-warnings -m "integration" --junitxml=integration-results.xml
      displayName: "Run integration tests"
      env:
        SqlConnectionString: $(local.settings.json)

    - task: PublishTestResults@2
      inputs:
        testResultsFiles: '**/integration-results.xml'
        testRunTitle: 'Integration Tests'
      condition: succeededOrFailed()

# 2. Deploy Function App
- stage: Deploy
  displayName: "Deploy Function App"
  dependsOn: Build_and_Test
  condition: succeeded()
  jobs:
  - deployment: DeployFunction
    displayName: "Deploy to Azure Functions"
    environment: $(environment)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureFunctionApp@2
            inputs:
              azureSubscription: $(azureSubscription)
              appType: 'functionAppLinux'
              appName: $(functionAppName)
              package: '$(System.DefaultWorkingDirectory)'
              runtimeStack: 'PYTHON|3.10'